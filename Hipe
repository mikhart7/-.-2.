import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
class MyFrame extends JFrame {
    private Point [] points = new Point[1000];
    private int k = 0;
    public MyFrame(String title) {
        super(title);
        setSize(600,400);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        addMouseListener(new MyMouseListener());
        setVisible(true);
    }

    private class MyMouseListener implements MouseListener {
        @Override
        public void mouseClicked(MouseEvent mouseEvent) {
            if (k < points.length) {
                points[k] = new Point(mouseEvent.getX(), mouseEvent.getY());
                k++;
                repaint();
            }
        }
        @Override
        public void mousePressed(MouseEvent mouseEvent) {
            //System.out.println("Pressed");
        }
        @Override
        public void mouseReleased(MouseEvent mouseEvent) {
            //System.out.println("Released");
        }
        @Override
        public void mouseEntered(MouseEvent mouseEvent) {
            //System.out.println("Entered");
        }
        @Override
        public void mouseExited(MouseEvent mouseEvent) {
            //System.out.println("Exited");
        }
    }
    @Override
    public void paint(Graphics g) {
        super.paint(g);
        double r = 0;
       int m = 0,n=0;
        for (int i = 0 ; i < k ; i++){
            g.drawOval(points[i].x-3,points[i].y-3,5,5);
        }
        for (int i = 0 ; i < k ; i++) {
            for (int j = 0; j < k; j++) {
                if (Math.sqrt(Math.pow(points[i].x - points[j].x, 2) + Math.pow(points[i].y - points[j].y, 2)) > r) {
                    r = Math.sqrt(Math.pow(points[i].x - points[j].x, 2) + Math.pow(points[i].y - points[j].y, 2));
                    m = i;
                    n = j;
                }
            }
        }
        g.setColor(Color.red);
        if (k>1) {
            g.drawOval(points[m].x-3, points[m].y - 3, 5, 5);
            g.drawOval(points[n].x-3, points[n].y - 3, 5, 5);
            g.drawLine(points[m].x, points[m].y, points[n].x, points[n].y);
        }
    }

  }


    public  class Main {
    public  static void main(String[] args) {
        MyFrame frame = new MyFrame("MOUSE");
    }
}
